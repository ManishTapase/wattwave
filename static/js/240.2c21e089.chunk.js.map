{"version":3,"file":"static/js/240.2c21e089.chunk.js","mappings":"uKAIAA,EAAAA,GAAKC,eAAeC,EAAAA,GAEpB,MAqDA,EArD6BC,KAC3B,MAAMC,GAAUC,EAAAA,EAAAA,WAEhBC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAUH,EAAQI,QAClBC,EAAeL,EAAQI,QAAQE,YAGrCV,EAAAA,GAAKW,OACHJ,EACA,CAAEK,EAAG,QACL,CACEA,EAAE,IAADC,OAAMJ,EAAe,IACtBK,KAAM,OACNC,cAAe,CACbC,QAAST,EACTU,MAAO,UACPC,IAAI,SACJC,OAAO,IAGZ,GACA,IAEH,IAAIC,EAAK,CACPC,WAAY,4CACZC,oBAAqB,cACrBC,qBAAsB,QAGxB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,OAAQ,cAAeC,QAAS,QAASC,UACrDC,EAAAA,EAAAA,MAAA,QACEC,IAAK1B,EACL2B,UAAU,6BACVN,MAAO,CACLO,QAAS,QACTC,SAAU,QACVC,WAAY,SACZC,SAAU,WACVR,QAAS,OACTS,MAAO,eAEPR,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,QAAMC,MAAOL,EAAGQ,SAAC,gBAAkB,UAACJ,EAAAA,EAAAA,KAAA,QAAMC,MAAOL,EAAGQ,SAAC,OAAS,gBAE9DJ,EAAAA,EAAAA,KAAA,QAAMC,MAAOL,EAAGQ,SAAC,wBAEf,C","sources":["Sections/GetUpCharge.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { gsap } from \"gsap\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\n\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nconst HorizontalTextScroll = () => {\r\n  const textRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const element = textRef.current;\r\n    const elementWidth = textRef.current.offsetWidth;\r\n\r\n    // Ensure ScrollTrigger dynamically calculates the scroll distance\r\n    gsap.fromTo(\r\n      element,\r\n      { x: \"100%\" }, // Start completely off-screen to the left\r\n      {\r\n        x: `-${elementWidth + 50}`, // Stop when the text is fully visible\r\n        ease: \"none\", // Linear motion for consistent speed\r\n        scrollTrigger: {\r\n          trigger: element, // Element that triggers the animation\r\n          start: \"top 95%\", // Start when the element enters the viewport\r\n          end: `top 0%`, // Stop when the element's top aligns with the center of the viewport\r\n          scrub: true, // Smooth scrolling tied to scroll progress\r\n        },\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  var bg = {\r\n    background: \"linear-gradient(200deg, #000428, #004e92)\",\r\n    WebkitTextFillColor: \"transparent\",\r\n    WebkitBackgroundClip: \"text\",\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"max-content\", padding: \"20px\" }}>\r\n      <span\r\n        ref={textRef}\r\n        className=\"font-poppins font-semibold\"\r\n        style={{\r\n          display: \"block\",\r\n          fontSize: \"10rem\",\r\n          whiteSpace: \"nowrap\", // Prevent wrapping\r\n          position: \"relative\",\r\n          padding: \"10px\",\r\n          width: \"max-content\",\r\n          // background: \"#58a0df\", // Light gray for visibility\r\n        }}\r\n      >\r\n        <span style={bg}>Get Charged</span>âš¡<span style={bg}>Up</span>\r\n        ðŸ”‹\r\n        <span style={bg}>with Watt Wave!</span>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HorizontalTextScroll;\r\n"],"names":["gsap","registerPlugin","ScrollTrigger","HorizontalTextScroll","textRef","useRef","useEffect","element","current","elementWidth","offsetWidth","fromTo","x","concat","ease","scrollTrigger","trigger","start","end","scrub","bg","background","WebkitTextFillColor","WebkitBackgroundClip","_jsx","style","height","padding","children","_jsxs","ref","className","display","fontSize","whiteSpace","position","width"],"sourceRoot":""}